{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from 'contentlayer/source-files'\nimport remarkGfm from 'remark-gfm' // Add remark-gfm for GitHub Flavored Markdown\n// import rehypePrettyCode from 'rehype-pretty-code'; // Example: If you want code highlighting\n\nexport const Post = defineDocumentType(() => ({\n  name: 'Post',\n  filePathPattern: `blog/**/*.mdx`, // Match mdx files in the blog folder\n  contentType: 'mdx',\n  fields: {\n    title: { \n      type: 'string',\n      description: 'The title of the post',\n      required: true,\n    },\n    date: { \n      type: 'date', \n      description: 'The date the post was published',\n      required: true,\n    },\n    description: {\n      type: 'string',\n      description: 'A short description of the post for previews and SEO',\n      required: true,\n    },\n    author: {\n      type: 'string',\n      description: 'The author of the post',\n      required: true,\n    },\n    tags: {\n      type: 'list',\n      of: { type: 'string' },\n      description: 'Tags associated with the post',\n      required: false, // Optional\n    },\n    coverImage: {\n      type: 'string',\n      description: 'URL for the post\\'s cover image',\n      required: false, // Optional\n    },\n    // Add any other fields from your frontmatter here\n  },\n  computedFields: {\n    slug: {\n      type: 'string',\n      // remove `blog/` prefix and `.mdx` suffix\n      resolve: (doc) => doc._raw.flattenedPath.replace(/^blog\\/?/, ''),\n    },\n    url: {\n      type: 'string',\n      resolve: (doc) => `/blog/${doc._raw.flattenedPath.replace(/^blog\\/?/, '')}`,\n    },\n  },\n}))\n\n// Configuration for rehype-pretty-code (example)\n// const options = {\n//   theme: 'github-dark',\n// };\n\nexport default makeSource({\n  contentDirPath: 'src/content', // Root directory for content\n  documentTypes: [Post],\n  mdx: {\n    // remarkPlugins: [remarkGfm], // Temporarily commented out\n    // rehypePlugins: [[rehypePrettyCode, options]],\n    // Add other MDX options here if needed\n  }\n}) "],
  "mappings": ";AAAA,SAAS,oBAAoB,kBAAkB;AAIxC,IAAM,OAAO,mBAAmB,OAAO;AAAA,EAC5C,MAAM;AAAA,EACN,iBAAiB;AAAA;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO;AAAA,MACL,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,aAAa;AAAA,MACX,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,QAAQ;AAAA,MACN,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,IAAI,EAAE,MAAM,SAAS;AAAA,MACrB,aAAa;AAAA,MACb,UAAU;AAAA;AAAA,IACZ;AAAA,IACA,YAAY;AAAA,MACV,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA;AAAA,IACZ;AAAA;AAAA,EAEF;AAAA,EACA,gBAAgB;AAAA,IACd,MAAM;AAAA,MACJ,MAAM;AAAA;AAAA,MAEN,SAAS,CAAC,QAAQ,IAAI,KAAK,cAAc,QAAQ,YAAY,EAAE;AAAA,IACjE;AAAA,IACA,KAAK;AAAA,MACH,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ,SAAS,IAAI,KAAK,cAAc,QAAQ,YAAY,EAAE,CAAC;AAAA,IAC3E;AAAA,EACF;AACF,EAAE;AAOF,IAAO,8BAAQ,WAAW;AAAA,EACxB,gBAAgB;AAAA;AAAA,EAChB,eAAe,CAAC,IAAI;AAAA,EACpB,KAAK;AAAA;AAAA;AAAA;AAAA,EAIL;AACF,CAAC;",
  "names": []
}
